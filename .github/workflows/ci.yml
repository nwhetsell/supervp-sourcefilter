name: CI

on: [push, pull_request]

jobs:
  Test:
    runs-on: macos-13

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Max
        run: brew install cycling74-max

      - name: Install SuperVP
        run: |
          npm install selenium-webdriver
          node - <<EOS
          const { Builder, By, Key, until } = require('selenium-webdriver');
          const chrome = require('selenium-webdriver/chrome');
          const driver = new Builder()
            .forBrowser('chrome')
            .setChromeOptions(new chrome.Options().setUserPreferences({
              'download.default_directory': process.env.GITHUB_WORKSPACE,
              'download.prompt_for_download': false,
              'safebrowsing.enabled': true
            }))
            .build();
          const DMGLocator = By.xpath('//a[@href="/asset/1680/SuperVPMaxMSP-2024-04-osx.dmg"]');
          driver
            .get('https://forum.ircam.fr/accounts/ircamauth/login/?next=%2Fprojects%2Fdetail%2Fsupervp-for-max%2F')
            .then(() => driver.findElement(By.name('login')).sendKeys('$IRCAM_LOGIN'))
            .then(() => driver.findElement(By.name('password')).sendKeys('$IRCAM_PASSWORD', Key.RETURN))
            .then(() => driver.wait(until.elementLocated(DMGLocator, 20000)))
            .then(() => driver.findElement(DMGLocator).click())
            .then(() => driver.sleep(60000))
            .then(() => driver.quit());
          EOS
          hdiutil attach SuperVPMaxMSP-2024-04-osx.dmg
          mkdir -p ~/Documents/Max\ 9/Packages
          cp -R /Volumes/Ircam\ SuperVPMaxMSP/SuperVPMaxMSP ~/Documents/Max\ 9/Packages
        env:
          IRCAM_LOGIN: ${{ secrets.IRCAM_LOGIN }}
          IRCAM_PASSWORD: ${{ secrets.IRCAM_PASSWORD }}

      - name: Clone max-test
        run: |
          cd ~/Documents/Max\ 9/Packages
          git clone https://github.com/Cycling74/max-test.git
          cd max-test
          git submodule update --init
          sed -i '' -e 's/Fixnum/Integer/g' ruby/rosc/lib/osc.rb

      # The Fixnum (and Bignum) classes were last supported in Ruby 2.3, which
      # reached end-of-life in 2019:
      #   https://www.ruby-lang.org/en/downloads/branches/
      - name: Patch max-test
        run: |
          cd ~/Documents/Max\ 9/Packages/max-test
          sed -i '' -e 's/Fixnum/Integer/g' ruby/rosc/lib/osc.rb

      - name: Build oscar extension
        run: |
          cd ~/Documents/Max\ 9/Packages/max-test/source/projects/oscar
          cmake -S . -B build
          cmake --build build

      - name: Configure Max and max-test
        run: |
          mkdir -p ~/Library/Application\ Support/Cycling\ \'74/Max\ 9/Settings
          echo "max setsearchpath 5 \"Macintosh HD:$GITHUB_WORKSPACE\" temp;" > ~/Library/Application\ Support/Cycling\ \'74/Max\ 9/Settings/maxsearchpaths.txt
          cd ~/Documents/Max\ 9/Packages/max-test
          mv misc/max-test-config-example.json misc/max-test-config.json
          rm -r patchers

      - name: Install Ruby gems
        run: gem install sqlite3

      # The test runner is more-or-less broken. To get a non-zero return code,
      # you have to require the test runner Ruby script, and also pass an extra
      # architecture argument to keep the test runner from calling exit; see
      # https://github.com/Cycling74/max-test/issues/23
      - name: Run tests
        run: |
          cd ~/Documents/Max\ 9/Packages/max-test/ruby
          ruby -e 'require("./test.rb")' \
               -e 'exit 1 if ENV["MAXTEST_PASS"] != "pass"' \
               /Applications/Max.app x86_64 2> stderr.txt

      - name: Show standard error
        run: cat ~/Documents/Max\ 9/Packages/max-test/ruby/stderr.txt
        if: always()
